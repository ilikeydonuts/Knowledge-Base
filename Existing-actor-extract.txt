import os
import sys
import photoshop_python_api
from PyQt5.QtWidgets import QApplication, QFileDialog, QPushButton, QVBoxLayout, QWidget
from photoshop_python_api import Photoshop

keywords = [
    "Hip",
    "Face",
    "Mouth",
    "Eye",
    "FrontHair",
    "Leg",
    "Shank",
    "Forearm",
    "Arm",
    "Hand",
    "Foot",
]

def should_save_layer(group_name):
    return any(keyword in group_name for keyword in keywords)

def save_layers_as_png(doc, output_folder):
    for group in doc.layerSets:
        if should_save_layer(group.name):
            for layer in group.artLayers:
                layer_name = layer.name.replace(" ", "_")
                layer.visible = True
                doc.activeLayer = layer
                
                # Make all other layers invisible
                for other_layer in group.artLayers:
                    if other_layer != layer:
                        other_layer.visible = False
                
                output_path = os.path.join(output_folder, f"{layer_name}.png")
                options = Photoshop.PNGSaveOptions()
                doc.saveAs(Photoshop.File(output_path), options, True)
                print(f"Saved layer as PNG: {output_path}")

def process_psd_files(file_paths, output_folder):
    with Photoshop() as ps_app:
        for file_path in file_paths:
            doc = ps_app.open(file_path)
            save_layers_as_png(doc, output_folder)

class MainWindow(QWidget):
    def __init__(self):
        super().__init__()

        layout = QVBoxLayout()

        select_files_button = QPushButton("Select PSD Files")
        select_files_button.clicked.connect(self.select_psd_files)
        layout.addWidget(select_files_button)

        select_output_folder_button = QPushButton("Select Output Folder")
        select_output_folder_button.clicked.connect(self.select_output_folder)
        layout.addWidget(select_output_folder_button)

        self.process_button = QPushButton("Process PSD Files")
        self.process_button.clicked.connect(self.process_files)
        self.process_button.setEnabled(False)
        layout.addWidget(self.process_button)

        self.setLayout(layout)

        self.file_paths = []
        self.output_folder = "H:\Character-Designer"

    def select_psd_files(self):
        file_paths, _ = QFileDialog.getOpenFileNames(self, "Select PSD Files", "", "PSD Files (*.psd)")
        if file_paths:
            self.file_paths = file_paths
            self.update_process_button()

    def select_output_folder(self):
        output_folder = QFileDialog.getExistingDirectory(self, "Select Output Folder")
        if output_folder:
            self.output_folder = output_folder
            self.update_process_button()

    def update_process_button(self):
        self.process_button.setEnabled(bool(self.file_paths) and bool(self.output_folder))

    def process_files(self):
        process_psd_files(self.file_paths, self.output_folder)

app = QApplication(sys.argv)
window = MainWindow()
window.show()
sys.exit(app.exec_())
